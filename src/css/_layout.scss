$squareWidth: 16vh;
$squareMaxWidth: 120px;
$squareMinWidth: 45px;

$boardWidth: calc((#{$squareWidth} * 3) + (1px * 4));
$boardMaxWidth: calc((#{$squareMaxWidth} * 3) + (1px * 4));
$boardMinWidth: calc((#{$squareMinWidth} * 3) + (1px * 4));

.square move {
  height: calc(#{$squareWidth} - 1em);
  width: calc(#{$squareWidth} - 1em);
  max-height: calc(#{$squareMaxWidth} - 1em);
  max-width: calc(#{$squareMaxWidth} - 1em);
  min-height: calc(#{$squareMinWidth} - 1em);
  min-width: calc(#{$squareMinWidth} - 1em);
  padding: 0.5em;
}

.board-row {
  width: $boardWidth;
  max-width: $boardMaxWidth;
  min-width: $boardMinWidth;
}

.overlay {
  width: $boardWidth;
  height: $boardWidth;
  max-width: $boardMaxWidth;
  max-height: $boardMaxWidth;
  min-width: $boardMinWidth;
  min-height: $boardMinWidth;

  &.vertical__left svg {
    width: #{$squareWidth};
  }
  &.vertical__right svg {
    width: #{$squareWidth};
    margin-right: calc(#{$squareWidth} * 2) !important;
  }
  &.horizontal__top {
    margin-top: -#{$squareWidth} !important;
  }
  &.horizontal__bottom {
    margin-top: #{$squareWidth} !important;
  }
  &.diagonal {
    svg {
      width: 130%;
      height: 130%;
      margin: -15%;
    }
  }
}

#score, .game-info {
  height: calc((100vh - #{$boardWidth}) / 2);
  min-height: #{$squareMinWidth};
}

#score > * {
  margin: 5vh 1vh !important;
  width: 5vh;
}

.game-info {
  display: table;
  width: 100%;

  #status {
    display: table-cell;
    vertical-align: bottom;
    padding-bottom: 5vh;

    player {
      width: 6vh;
      margin: 1vh auto;
    }
  }
}

/* Desktop */
@media screen and (min-aspect-ratio: 300/400) and (min-height: 750px) {
  #score, .game-info {
    height: calc((100vh - #{$boardMaxWidth}) / 2);
  }

  @media screen and (min-height: 770px) {
    .overlay {
      &.horizontal__top {
        margin-top: -#{$squareMaxWidth} !important;
      }
      &.horizontal__bottom {
        margin-top: #{$squareMaxWidth} !important;
      }
    }
  }
}

/* mobile */
@media screen and (max-aspect-ratio: 300/400) {
  $squareWidth: 26.6vw;
  $boardWidth: calc((#{$squareWidth} * 3) + (1px * 4));

  .square move {
    height: calc(#{$squareWidth} - 1em);
    width: calc(#{$squareWidth} - 1em);
  }

  .board-row {
    width: $boardWidth;
  }

  .overlay {
    width: $boardWidth;
    height: $boardWidth;
    max-width: $boardMaxWidth;
    max-height: $boardMaxWidth;
    min-width: $boardMinWidth;
    min-height: $boardMinWidth;

    &.vertical__left svg {
      width: #{$squareWidth};
    }
    &.vertical__right svg {
      width: #{$squareWidth};
      margin-right: calc(#{$squareWidth} * 2) !important;
    }

    &.horizontal__top {   margin-top: -#{$squareWidth} !important;   }
    &.horizontal__bottom {   margin-top: #{$squareWidth} !important;   }

    &.diagonal {
      svg {
        width: 120%;
        height: 120%;
        margin: -10%;
      }
    }
  }

  #score, .game-info {
    height: calc((100vh - #{$boardWidth}) / 2);
  }

  @media screen and (min-width: 450px) {
    #score, .game-info {
      height: calc((100vh - #{$boardMaxWidth}) / 2);
    }
  }
}

@media screen and (max-height: 300px) {
  .game .overlay {
    &.horizontal__top {
      margin-top: -#{$squareMinWidth} !important;
    }
    &.horizontal__bottom {
      margin-top: #{$squareMinWidth} !important;
    }
  }
}


// Intro Pages
$maxDimensionsGraphics: 400px;
$minDimensionsGraphics: 200px;
#home {
  display: block;
  margin: 0 auto;
  min-height: 300px;

  .containment {
    max-width: $maxDimensionsGraphics;
    max-height: $maxDimensionsGraphics;
    width: 80vw;
    height: 80vw;
    min-height: $minDimensionsGraphics;
    min-width: $minDimensionsGraphics;
    display: block;
    margin: 10vw auto;

    .quadrant {
      width: 40vw;
      height: 40vw;
      max-width: #{$maxDimensionsGraphics / 2};
      max-height: #{$maxDimensionsGraphics / 2};
      min-height: #{$minDimensionsGraphics / 2};
      min-width: #{$minDimensionsGraphics / 2};
      display: inline-block;
      text-align: center;
    }
  }

  @media screen and (min-aspect-ratio: 300/300) {
    .containment {
      width: 80vh;
      height: 80vh;
      margin: 10vh auto;

      .quadrant {
        width: 40vh;
        height: 40vh;
      }
    }

    @media screen and (min-height: 600px) {
      .containment {
        margin: calc((100vh - #{$maxDimensionsGraphics}) / 2) auto;
      }
    }
  }

  @media screen and (max-aspect-ratio: 300/300) {
    .containment {
      margin: calc((100vh - 80vw) / 2) auto;
    }

    @media screen and (min-width: 500px) {
      .containment {
        margin: calc((100vh - #{$maxDimensionsGraphics}) / 2) auto;
      }
    }
  }
}